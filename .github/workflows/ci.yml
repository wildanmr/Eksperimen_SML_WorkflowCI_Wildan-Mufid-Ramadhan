name: MLflow CI/CD Pipeline

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      use_dagshub:
        description: 'Use DagsHub for MLflow tracking'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
  DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
  MLFLOW_TRACKING_URI: https://dagshub.com/wildanmr/SMSML_Wildan-Mufid-Ramadhan.mlflow
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

jobs:
  train-model:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Miniconda
      uses: conda-incubator/setup-miniconda@v3
      with:
        activate-environment: ml-env
        environment-file: MLProject/conda.yaml
        python-version: 3.11
        auto-activate-base: false
        miniforge-version: latest
    
    - name: Verify conda environment
      shell: bash -l {0}
      run: |
        conda info
        conda list
    
    - name: Download dataset
      shell: bash -l {0}
      run: |
        cd MLProject
        curl -L -o diabetes_preprocessed.csv https://github.com/wildanmr/Eksperimen_SML_Wildan-Mufid-Ramadhan/releases/latest/download/diabetes_preprocessed.csv
        ls -la *.csv
    
    - name: Verify dataset
      shell: bash -l {0}
      run: |
        cd MLProject
        python -c "import pandas as pd; df = pd.read_csv('diabetes_preprocessed.csv'); print(f'Dataset shape: {df.shape}'); print(f'Columns: {list(df.columns)}')"
    
    - name: Train model with MLflow
      shell: bash -l {0}
      env:
        DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
        DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
        MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
        MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
      run: |
        cd MLProject
        echo "Starting MLflow run..."
        mlflow run . -e main
    
    - name: List generated artifacts
      shell: bash -l {0}
      if: always()
      run: |
        cd MLProject
        echo "=== Generated files ==="
        find . -name "*.pkl" -o -name "*.png" -o -name "*.txt" | head -20
        echo "=== Artifacts directory ==="
        if [ -d "artifacts" ]; then ls -la artifacts/; fi
        echo "=== Saved models directory ==="
        if [ -d "saved_models" ]; then ls -la saved_models/; fi
    
    - name: Upload model artifacts
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: model-artifacts-${{ github.run_number }}
        path: |
          MLProject/artifacts/
          MLProject/saved_models/
          MLProject/*.pkl
        retention-days: 30
    
    - name: Upload logs
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: training-logs-${{ github.run_number }}
        path: |
          MLProject/*.log
          MLProject/mlruns/
        retention-days: 7