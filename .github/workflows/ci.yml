name: MLflow CI/CD Pipeline

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      use_dagshub:
        description: 'Use DagsHub for MLflow tracking'
        required: false
        default: 'true'
        type: choice
        options:
          - 'true'
          - 'false'

env:
  DAGSHUB_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
  DAGSHUB_TOKEN: ${{ secrets.DAGSHUB_TOKEN }}
  MLFLOW_TRACKING_USERNAME: ${{ secrets.DAGSHUB_USERNAME }}
  MLFLOW_TRACKING_PASSWORD: ${{ secrets.DAGSHUB_TOKEN }}
  MLFLOW_TRACKING_URI: https://dagshub.com/wildanmr/SMSML_Wildan-Mufid-Ramadhan.mlflow
  DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
  DOCKER_HUB_TOKEN: ${{ secrets.DOCKER_HUB_TOKEN }}

jobs:
  train-model:
    runs-on: ubuntu-latest
    outputs:
      run_id: ${{ steps.run-mlflow-project.outputs.run_id }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Miniconda
        uses: conda-incubator/setup-miniconda@v3
        with:
          miniconda-version: "latest"
          python-version: "3.11"
          auto-update-conda: true
          auto-activate-base: false
          environment-file: MLProject/conda.yaml
          activate-environment: diabetes-ml-env

      - name: Install dependencies
        shell: bash -l {0}
        run: |
          conda activate diabetes-ml-env
          pip install mlflow dagshub
          
      - name: Download dataset
        shell: bash -l {0}
        run: |
          conda activate diabetes-ml-env
          cd MLProject
          wget -O diabetes_preprocessed.csv "https://github.com/wildanmr/Eksperimen_SML_Wildan-Mufid-Ramadhan/releases/latest/download/diabetes_preprocessed.csv"

      - name: Run MLflow Project
        id: run-mlflow-project
        shell: bash -l {0}
        run: |
          conda activate diabetes-ml-env
          cd MLProject
          RUN_OUTPUT=$(mlflow run . --no-conda 2>&1)
          echo "$RUN_OUTPUT"
          
          # Extract run ID from MLflow output
          RUN_ID=$(echo "$RUN_OUTPUT" | grep -o "Run ID: [a-f0-9]*" | head -1 | cut -d' ' -f3)
          if [ -z "$RUN_ID" ]; then
            # Alternative method to get latest run ID
            RUN_ID=$(python -c "
            import mlflow
            import dagshub
            dagshub.init(repo_owner='${{ env.DAGSHUB_USERNAME }}', repo_name='SMSML_Wildan-Mufid-Ramadhan', mlflow=True)
            mlflow.set_tracking_uri('${{ env.MLFLOW_TRACKING_URI }}')
            experiment = mlflow.get_experiment_by_name('CI_Auto_Training')
            if experiment:
                runs = mlflow.search_runs(experiment_ids=[experiment.experiment_id], max_results=1, order_by=['start_time DESC'])
                if not runs.empty:
                    print(runs.iloc[0]['run_id'])
            ")
          fi
          
          echo "Run ID: $RUN_ID"
          echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ env.DOCKER_HUB_USERNAME }}
          password: ${{ env.DOCKER_HUB_TOKEN }}

      - name: Build and Push Docker Image
        if: success() && steps.run-mlflow-project.outputs.run_id != ''
        shell: bash -l {0}
        run: |
          conda activate diabetes-ml-env
          cd MLProject
          
          RUN_ID="${{ steps.run-mlflow-project.outputs.run_id }}"
          echo "Building Docker image for run: $RUN_ID"
          
          # Build Docker image using mlflow build-docker
          mlflow models build-docker \
            --model-uri "runs:/$RUN_ID/best_model" \
            --name "${{ env.DOCKER_HUB_USERNAME }}/diabetes-model" \
            --enable-mlserver
          
          # Tag and push to Docker Hub
          docker tag "${{ env.DOCKER_HUB_USERNAME }}/diabetes-model:latest" "${{ env.DOCKER_HUB_USERNAME }}/diabetes-model:${{ github.run_number }}"
          docker push "${{ env.DOCKER_HUB_USERNAME }}/diabetes-model:latest"
          docker push "${{ env.DOCKER_HUB_USERNAME }}/diabetes-model:${{ github.run_number }}"

      - name: Store artifacts
        shell: bash -l {0}
        run: |
          # Create artifacts directory
          mkdir -p stored_artifacts
          
          # Copy any local artifacts
          if [ -d "MLProject/artifacts" ]; then
            cp -r MLProject/artifacts/* stored_artifacts/
          fi
          
          # Create build info
          echo "Build: ${{ github.run_number }}" > stored_artifacts/build_info.txt
          echo "Commit: ${{ github.sha }}" >> stored_artifacts/build_info.txt
          echo "Run ID: ${{ steps.run-mlflow-project.outputs.run_id }}" >> stored_artifacts/build_info.txt
          echo "Docker Image: ${{ env.DOCKER_HUB_USERNAME }}/diabetes-model:${{ github.run_number }}" >> stored_artifacts/build_info.txt
          echo "Date: $(date)" >> stored_artifacts/build_info.txt

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: model-artifacts-${{ github.run_number }}
          path: stored_artifacts/
          retention-days: 30

      - name: Commit artifacts to repository
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add stored_artifacts/
          git commit -m "Add model artifacts for build ${{ github.run_number }}" || echo "No changes to commit"
          git push origin main || echo "Push failed"

      - name: Create deployment summary
        run: |
          echo "## ðŸš€ MLflow CI/CD Deployment Summary" >> $GITHUB_STEP_SUMMARY
          echo "- **Build Number**: ${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Run ID**: ${{ steps.run-mlflow-project.outputs.run_id }}" >> $GITHUB_STEP_SUMMARY
          echo "- **Docker Image**: ${{ env.DOCKER_HUB_USERNAME }}/diabetes-model:${{ github.run_number }}" >> $GITHUB_STEP_SUMMARY
          echo "- **DagsHub MLflow**: [View Experiments](${{ env.MLFLOW_TRACKING_URI }})" >> $GITHUB_STEP_SUMMARY
          echo "- **Docker Hub**: [View Image](https://hub.docker.com/r/${{ env.DOCKER_HUB_USERNAME }}/diabetes-model)" >> $GITHUB_STEP_SUMMARY